{"ast":null,"code":"import _defineProperty from\"C:/Users/cifue/Documents/projects/portfolio-2/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"C:/Users/cifue/Documents/projects/portfolio-2/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/cifue/Documents/projects/portfolio-2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{validateEmail}from'../../utils/helpers';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ContactForm(){//Initial values of name, email, & message set to ''\nvar _useState=useState({name:'',email:'',message:''}),_useState2=_slicedToArray(_useState,2),formState=_useState2[0],setFormState=_useState2[1];//Destructure all 3 key-pair values to be empty using formState.\n//Each input field is set to an initial value of '' or emptied\nvar name=formState.name,email=formState.email,message=formState.message;//errorMessage = ''(initial value), setErrorMessage = x(updated value)\nvar _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),errorMessage=_useState4[0],setErrorMessage=_useState4[1];function handleChange(event){if(event.target.name==='Email'){//Determines if given email is valid or not\nvar isValid=validateEmail(event.target.value);console.log(isValid);//Invalid email\nif(!isValid){setErrorMessage('Email given is invalid');}else{setErrorMessage('');}}else{//Nothing is provided for name, email, or message\nif(!event.target.value.length){setErrorMessage(\"\".concat(event.target.name,\" is required\"));}else{setErrorMessage('');}}console.log('errorMessage: ',errorMessage);//If inputs are valid( aka no error message appears) update setFormState with the given valid inputs\nif(!errorMessage){setFormState(_objectSpread(_objectSpread({},formState),{},_defineProperty({},event.target.name,event.target.value)));}}function handleSubmit(event){event.preventDefault();}return/*#__PURE__*/_jsxs(\"section\",{children:[/*#__PURE__*/_jsx(\"h1\",{\"data-testid\":\"h1tag\",id:\"contact\",children:\"Contact Me\"}),/*#__PURE__*/_jsx(\"div\",{className:\"row justify-content-center\",children:/*#__PURE__*/_jsxs(\"form\",{id:\"form\",className:\"col-4 text-center rounded border-dark p-5\",action:\"#!\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Name:\"}),/*#__PURE__*/_jsx(\"input\",{name:\"Name\",id:\"defaultSubscriptionFormPassword\",className:\"form-control mb-4\",placeholder:\"Name\",defaultValue:name,onBlur:handleChange})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email address:\"}),/*#__PURE__*/_jsx(\"input\",{name:\"Email\",id:\"defaultSubscriptionFormEmail\",className:\"form-control mb-4\",placeholder:\"E-mail\",defaultValue:email,onBlur:handleChange})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"message\",children:\"Message:\"}),/*#__PURE__*/_jsx(\"textarea\",{name:\"Message\",rows:\"7\",id:\"defaultSubscriptionFormEmail\",className:\"form-control mb-4\",placeholder:\"Message\",defaultValue:message,onBlur:handleChange})]}),errorMessage&&/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"p\",{className:\"erro-text\",children:errorMessage})}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-outline-dark btn-rounded btn-block my-4 waves-effect z-depth-0\",type:\"submit\",children:\"Submit\"})]})})]});}export default ContactForm;","map":{"version":3,"sources":["C:/Users/cifue/Documents/projects/portfolio-2/src/components/Contact/index.js"],"names":["React","useState","validateEmail","ContactForm","name","email","message","formState","setFormState","errorMessage","setErrorMessage","handleChange","event","target","isValid","value","console","log","length","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport { validateEmail } from '../../utils/helpers';\n\nfunction ContactForm() {\n  //Initial values of name, email, & message set to ''\n  const [formState, setFormState] = useState({ name: '', email: '', message: '' });\n  //Destructure all 3 key-pair values to be empty using formState.\n  //Each input field is set to an initial value of '' or emptied\n  const { name, email, message } = formState\n  //errorMessage = ''(initial value), setErrorMessage = x(updated value)\n  const [errorMessage, setErrorMessage] = useState('');\n\n  function handleChange(event) {\n      if (event.target.name === 'Email') {\n          //Determines if given email is valid or not\n          const isValid = validateEmail(event.target.value)\n          console.log(isValid);\n          //Invalid email\n          if (!isValid) {\n              setErrorMessage('Email given is invalid')\n          } else {\n              setErrorMessage('')\n          }\n      }\n      else {\n          //Nothing is provided for name, email, or message\n          if (!event.target.value.length) {\n              setErrorMessage(`${event.target.name} is required`)\n          } else {\n              setErrorMessage('');\n          }\n      }\n      console.log('errorMessage: ', errorMessage);\n\n      //If inputs are valid( aka no error message appears) update setFormState with the given valid inputs\n      if (!errorMessage) {\n          setFormState({ ...formState, [event.target.name]: event.target.value })\n      }\n  }\n\n  function handleSubmit(event) {\n      event.preventDefault();\n  }\n\n  return (\n      <section>\n          <h1 data-testid=\"h1tag\" id=\"contact\">Contact Me</h1>\n          <div className=\"row justify-content-center\">\n              <form id =\"form\" className=\"col-4 text-center rounded border-dark p-5\" action=\"#!\" onSubmit={handleSubmit}>\n                  <div>\n                      {/*name input*/}\n                      <label htmlFor=\"name\">Name:</label>\n                      <input name=\"Name\" id=\"defaultSubscriptionFormPassword\" className=\"form-control mb-4\" placeholder=\"Name\" defaultValue={name} onBlur={handleChange} />\n                  </div>\n                  <div>\n                      {/*email input*/}\n                      <label htmlFor=\"email\">Email address:</label>\n                      <input name=\"Email\" id=\"defaultSubscriptionFormEmail\" className=\"form-control mb-4\" placeholder=\"E-mail\" defaultValue={email} onBlur={handleChange} />\n                  </div>\n                  <div>\n                      {/*message text area*/}\n                      <label htmlFor=\"message\">Message:</label>\n                      <textarea name=\"Message\" rows=\"7\" id=\"defaultSubscriptionFormEmail\" className=\"form-control mb-4\" placeholder=\"Message\" defaultValue={message} onBlur={handleChange} />\n                  </div>\n                  {errorMessage && (\n                      <div>\n                          <p className=\"erro-text\">{errorMessage}</p>\n                      </div>\n                  )}\n                  <button className=\"btn btn-outline-dark btn-rounded btn-block my-4 waves-effect z-depth-0\" type=\"submit\">Submit</button>\n              </form>\n          </div>\n      </section>\n  );\n}\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}