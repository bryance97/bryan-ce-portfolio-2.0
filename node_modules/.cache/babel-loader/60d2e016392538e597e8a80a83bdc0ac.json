{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cifue\\\\Documents\\\\projects\\\\portfolio-2\\\\src\\\\components\\\\Contact\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { validateEmail } from '../../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ContactForm() {\n  _s();\n\n  //Initial values of name, email, & message set to ''\n  const [formState, setFormState] = useState({\n    name: '',\n    email: '',\n    message: ''\n  }); //Destructure all 3 key-pair values to be empty using formState.\n  //Each input field is set to an initial value of '' or emptied\n\n  const {\n    name,\n    email,\n    message\n  } = formState; //errorMessage = ''(initial value), setErrorMessage = x(updated value)\n\n  const [errorMessage, setErrorMessage] = useState('');\n\n  function handleChange(event) {\n    if (event.target.name === 'Email') {\n      //Determines if given email is valid or not\n      const isValid = validateEmail(event.target.value);\n      console.log(isValid); //Invalid email\n\n      if (!isValid) {\n        setErrorMessage('Email given is invalid');\n      } else {\n        setErrorMessage('');\n      }\n    } else {\n      //Nothing is provided for name, email, or message\n      if (!event.target.value.length) {\n        setErrorMessage(`${event.target.name} is required`);\n      } else {\n        setErrorMessage('');\n      }\n    }\n\n    console.log('errorMessage: ', errorMessage); //If inputs are valid( aka no error message appears) update setFormState with the given valid inputs\n\n    if (!errorMessage) {\n      setFormState({ ...formState,\n        [event.target.name]: event.target.value\n      });\n    }\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      \"data-testid\": \"h1tag\",\n      id: \"contact\",\n      children: \"Contact Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"form\",\n        className: \"col-4 text-center rounded border-dark p-5\",\n        action: \"#!\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"Name\",\n            id: \"defaultSubscriptionFormPassword\",\n            className: \"form-control mb-4\",\n            placeholder: \"Name\",\n            defaultValue: name,\n            onBlur: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"Email\",\n            id: \"defaultSubscriptionFormEmail\",\n            className: \"form-control mb-4\",\n            placeholder: \"E-mail\",\n            defaultValue: email,\n            onBlur: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"message\",\n            children: \"Message:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"Message\",\n            rows: \"7\",\n            id: \"defaultSubscriptionFormEmail\",\n            className: \"form-control mb-4\",\n            placeholder: \"Message\",\n            defaultValue: message,\n            onBlur: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"erro-text\",\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-dark btn-rounded btn-block my-4 waves-effect z-depth-0\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ContactForm, \"I0yt9zdp/r26dwV41mNkyL7KJhw=\");\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["C:/Users/cifue/Documents/projects/portfolio-2/src/components/Contact/index.js"],"names":["React","useState","validateEmail","ContactForm","formState","setFormState","name","email","message","errorMessage","setErrorMessage","handleChange","event","target","isValid","value","console","log","length","handleSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport { validateEmail } from '../../utils/helpers';\n\nfunction ContactForm() {\n  //Initial values of name, email, & message set to ''\n  const [formState, setFormState] = useState({ name: '', email: '', message: '' });\n  //Destructure all 3 key-pair values to be empty using formState.\n  //Each input field is set to an initial value of '' or emptied\n  const { name, email, message } = formState\n  //errorMessage = ''(initial value), setErrorMessage = x(updated value)\n  const [errorMessage, setErrorMessage] = useState('');\n\n  function handleChange(event) {\n      if (event.target.name === 'Email') {\n          //Determines if given email is valid or not\n          const isValid = validateEmail(event.target.value)\n          console.log(isValid);\n          //Invalid email\n          if (!isValid) {\n              setErrorMessage('Email given is invalid')\n          } else {\n              setErrorMessage('')\n          }\n      }\n      else {\n          //Nothing is provided for name, email, or message\n          if (!event.target.value.length) {\n              setErrorMessage(`${event.target.name} is required`)\n          } else {\n              setErrorMessage('');\n          }\n      }\n      console.log('errorMessage: ', errorMessage);\n\n      //If inputs are valid( aka no error message appears) update setFormState with the given valid inputs\n      if (!errorMessage) {\n          setFormState({ ...formState, [event.target.name]: event.target.value })\n      }\n  }\n\n  function handleSubmit(event) {\n      event.preventDefault();\n  }\n\n  return (\n      <section>\n          <h1 data-testid=\"h1tag\" id=\"contact\">Contact Me</h1>\n          <div className=\"row justify-content-center\">\n              <form id =\"form\" className=\"col-4 text-center rounded border-dark p-5\" action=\"#!\" onSubmit={handleSubmit}>\n                  <div>\n                      {/*name input*/}\n                      <label htmlFor=\"name\">Name:</label>\n                      <input name=\"Name\" id=\"defaultSubscriptionFormPassword\" className=\"form-control mb-4\" placeholder=\"Name\" defaultValue={name} onBlur={handleChange} />\n                  </div>\n                  <div>\n                      {/*email input*/}\n                      <label htmlFor=\"email\">Email address:</label>\n                      <input name=\"Email\" id=\"defaultSubscriptionFormEmail\" className=\"form-control mb-4\" placeholder=\"E-mail\" defaultValue={email} onBlur={handleChange} />\n                  </div>\n                  <div>\n                      {/*message text area*/}\n                      <label htmlFor=\"message\">Message:</label>\n                      <textarea name=\"Message\" rows=\"7\" id=\"defaultSubscriptionFormEmail\" className=\"form-control mb-4\" placeholder=\"Message\" defaultValue={message} onBlur={handleChange} />\n                  </div>\n                  {errorMessage && (\n                      <div>\n                          <p className=\"erro-text\">{errorMessage}</p>\n                      </div>\n                  )}\n                  <button className=\"btn btn-outline-dark btn-rounded btn-block my-4 waves-effect z-depth-0\" type=\"submit\">Submit</button>\n              </form>\n          </div>\n      </section>\n  );\n}\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}